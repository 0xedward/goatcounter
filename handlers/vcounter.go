// Copyright © 2019 Martin Tournoij – This file is part of GoatCounter and
// published under the terms of a slightly modified EUPL v1.2 license, which can
// be found in the LICENSE file or at https://license.goatcounter.com

package handlers

import (
	"bytes"
	"fmt"
	"image"
	"image/color"
	"image/png"
	"net/http"
	"strings"
	"sync"
	"time"

	"github.com/go-chi/chi"
	"github.com/go-chi/chi/middleware"
	"golang.org/x/image/font"
	"golang.org/x/image/font/gofont/gobold"
	"golang.org/x/image/font/opentype"
	"golang.org/x/image/math/fixed"
	"zgo.at/goatcounter"
	"zgo.at/guru"
	"zgo.at/zdb"
	"zgo.at/zhttp"
	"zgo.at/zhttp/ztpl/tplfunc"
	"zgo.at/zstd/zfilepath"
)

type vcounter struct{}

func (h vcounter) mount(r chi.Router, db zdb.DB) {
	// This relies on e.g. Varnish for more extended caching.
	c := r.With(middleware.Compress(2), func(next http.Handler) http.Handler {
		return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
			w.Header().Set("Cache-Control", "public")
			w.Header().Set("Expires", goatcounter.Now().Add(30*time.Minute).Format(time.RFC1123Z))
			next.ServeHTTP(w, r)
		})
	})

	c.Get("/counter/*", zhttp.Wrap(h.counter))
}

var (
	pngImgOnce  sync.Once
	pngImg      image.Image
	pngImgTotal image.Image
	fontFace    font.Face
	fontColor   *image.Uniform
)

func (h vcounter) counter(w http.ResponseWriter, r *http.Request) error {
	site := Site(r.Context())
	if !site.Settings.AllowCounter {
		return guru.New(http.StatusForbidden, "Need to enable the ‘allow using the visitor counter’ setting")
	}

	var (
		path, ext  = zfilepath.SplitExt(r.URL.Path[9:])
		total      = path == "TOTAL"
		noBranding = r.URL.Query().Get("no_branding") != ""
		style      = r.URL.Query().Get("style")
	)
	if !site.PlanCustomDomain(r.Context()) {
		noBranding = false
	}

	var (
		hs  goatcounter.HitStats
		err error
	)
	if total {
		err = hs.SiteTotalUnique(r.Context())
	} else {
		err = hs.PathCountUnique(r.Context(), path)
	}
	if err != nil {
		return err
	}
	if len(hs) == 0 {
		hs = goatcounter.HitStats{{}}
	}
	count := tplfunc.Number(hs[0].CountUnique, site.Settings.NumberFormat)

	switch ext {
	default:
		return guru.Errorf(400, "unknown extension: %q", ext)
	case "json":
		w.Header().Set("Access-Control-Allow-Origin", "*")
		return zhttp.JSON(w, map[string]string{
			"count_unique": count,
		})
	case "html":
		w.Header().Set("Content-Type", "text/html")

		s := html
		if noBranding {
			s = htmlNoBranding
		}
		if total {
			s = strings.Replace(s, "page", "site", 1)
		}
		return zhttp.String(w, fmt.Sprintf(s, style, count))
	case "svg":
		w.Header().Set("Content-Type", "image/svg+xml")

		s := svg
		if noBranding {
			s = svgNoBranding
		}
		if total {
			s = strings.Replace(s, "page", "site", 1)
		}
		return zhttp.String(w, fmt.Sprintf(s, style, count))
	case "png":
		pngImgOnce.Do(setupPngImg)

		src := pngImg
		if total {
			src = pngImgTotal
		}

		bounds := src.Bounds()
		if noBranding {
			bounds.Max.Y = 60
		}
		img := image.NewRGBA(bounds)
		for y := bounds.Min.Y; y < bounds.Max.Y; y++ {
			for x := bounds.Min.X; x < bounds.Max.X; x++ {
				img.Set(x, y, src.At(x, y))
			}
		}
		if noBranding { // Copy bottom border.
			for y := 58; y <= 59; y++ {
				for x := bounds.Min.X; x < bounds.Max.X; x++ {
					img.Set(x, y, src.At(x, y+20))
				}
			}
		}

		// Draw to temporary image first, so we know the size of the result.
		// Then copy that in the destination.
		tmp := image.NewRGBA(bounds)
		drw := font.Drawer{
			Dst:  tmp,
			Src:  fontColor,
			Face: fontFace,
			Dot:  fixed.P(0, 22),
		}
		drw.DrawString(count)

		start := 100 - drw.Dot.X.Round()/2
		bounds = tmp.Bounds()
		for y := bounds.Min.Y; y < bounds.Max.Y; y++ {
			for x := bounds.Min.X; x < bounds.Max.X; x++ {
				c := tmp.At(x, y)
				if _, _, _, a := c.RGBA(); a != 0 {
					img.Set(start+x, y+24, c)
				}
			}
		}

		w.Header().Set("Content-Type", "image/png")
		return png.Encode(w, img)
	}
}

var html = `<!DOCTYPE html>
<html>
<style>
    @font-face {
        font-family: "Lato";
        font-weight: bold;
        font-style: normal;
        src: url(data:application/font-woff;charset=utf-8;base64,) format("woff");
    }
    body { padding: 0; margin: 0; background-color: #fff; }
    div  { width: 196px; height: 76px; border: 2px solid #9a15a4; border-radius: 2px; text-align: center;
           line-height: 1.35; overflow: hidden; color: #9a15a4; font-weight: bold; font-family:Lato; }
    #gcvc-for    { font-size:16px; }
    #gcvc-views  { font-size:22px; }
    #gcvc-by     { font-size:14px; }
    %s
</style>
<body>
<div>
    <span id="gcvc-for">Views for this page:</span>
    <br><span id="gcvc-views">%s</span>
    <br><span id="gcvc-by">stats by GoatCounter</span>
</div>
</body>
</html>`

var htmlNoBranding = strings.NewReplacer(
	`<br><span id="gcvc-by">stats by GoatCounter</span>`, "",
	"76px", "56px").Replace(html)

var svg = `<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg version="1.1" xmlns="http://www.w3.org/2000/svg" width="200" height="80" viewBox="0 0 200 80">
<defs><style>@font-face{font-family:"Lato";font-weight:bold;font-style:normal;src:url(data:application/font-woff;charset=utf-8;base64,) format("woff");}
#gcvc-border { fill:#fff; stroke:#9a15a4; stroke-width:1.4; stroke-linejoin: round; }
#gcvc        { font-weight: bold; font-family: Lato; fill: #9a15a4; }
#gcvc-for    { font-size:16px; }
#gcvc-views  { font-size:22px; }
#gcvc-by     { font-size:14px; }

%s</style></defs>
<rect id="gcvc-border" x="0.7" y="0.7" width="198" height="78" />
<clipPath id="_clip1"><rect width="415" height="428" /></clipPath>
<g id="gcvc" text-anchor="middle">
    <text id="gcvc-for" x="50%%" y="18">Views for this page:</text>
    <text id="gcvc-views" x="50%%" y="48">%s</text>
    <text id="gcvc-by" x="50%%" y="70">stats by GoatCounter</text>
</g>
</svg>`

var svgNoBranding = strings.NewReplacer(
	`<text id="gcvc-by" x="50%" y="70">stats by GoatCounter</text>`, "",
	`height="80" viewBox="0 0 200 80"`, `height="60" viewBox="0 0 200 60"`,
	`height="78"`, `height="58"`).Replace(svg)

func setupPngImg() {
	f, err := opentype.Parse(gobold.TTF)
	if err != nil {
		panic(err)
	}
	fontFace, err = opentype.NewFace(f, &opentype.FaceOptions{
		Size:    22,
		DPI:     72,
		Hinting: font.HintingFull,
	})
	if err != nil {
		panic(err)
	}
	fontColor = image.NewUniform(color.RGBA{R: 0x9a, G: 0x15, B: 0xa4, A: 255})

	pngImg, _, err = image.Decode(bytes.NewReader([]byte{0x89, 0x50, 0x4e, 0x47,
		0xd, 0xa, 0x1a, 0xa, 0x0, 0x0, 0x0, 0xd, 0x49, 0x48, 0x44, 0x52, 0x0, 0x0,
		0x0, 0xc8, 0x0, 0x0, 0x0, 0x50, 0x8, 0x3, 0x0, 0x0, 0x0, 0x6b, 0xb3, 0xca,
		0x82, 0x0, 0x0, 0x2, 0xc7, 0x50, 0x4c, 0x54, 0x45, 0x9a, 0x15, 0xa4, 0x9a,
		0x16, 0xa4, 0x9b, 0x17, 0xa5, 0x9b, 0x18, 0xa5, 0x9b, 0x19, 0xa5, 0x9c,
		0x1a, 0xa6, 0x9c, 0x1b, 0xa6, 0x9d, 0x1c, 0xa6, 0x9d, 0x1d, 0xa7, 0x9d,
		0x1e, 0xa7, 0x9e, 0x1f, 0xa7, 0x9e, 0x20, 0xa8, 0x9f, 0x20, 0xa8, 0x9f,
		0x21, 0xa9, 0x9f, 0x22, 0xa9, 0xa0, 0x23, 0xa9, 0xa0, 0x24, 0xaa, 0xa1,
		0x25, 0xaa, 0xa1, 0x26, 0xaa, 0xa1, 0x27, 0xab, 0xa2, 0x28, 0xab, 0xa2,
		0x29, 0xab, 0xa3, 0x2a, 0xac, 0xa3, 0x2b, 0xac, 0xa4, 0x2c, 0xad, 0xa4,
		0x2d, 0xad, 0xa5, 0x2f, 0xae, 0xa5, 0x30, 0xae, 0xa6, 0x31, 0xaf, 0xa6,
		0x32, 0xaf, 0xa7, 0x33, 0xaf, 0xa7, 0x34, 0xb0, 0xa7, 0x35, 0xb0, 0xa8,
		0x36, 0xb0, 0xa8, 0x36, 0xb1, 0xa9, 0x37, 0xb1, 0xa9, 0x38, 0xb2, 0xa9,
		0x39, 0xb2, 0xaa, 0x3a, 0xb2, 0xaa, 0x3b, 0xb3, 0xab, 0x3c, 0xb3, 0xab,
		0x3d, 0xb3, 0xab, 0x3e, 0xb4, 0xac, 0x3f, 0xb4, 0xac, 0x40, 0xb4, 0xad,
		0x41, 0xb5, 0xad, 0x42, 0xb5, 0xae, 0x43, 0xb6, 0xae, 0x44, 0xb6, 0xaf,
		0x45, 0xb7, 0xaf, 0x46, 0xb7, 0xaf, 0x47, 0xb7, 0xb0, 0x48, 0xb8, 0xb0,
		0x49, 0xb8, 0xb1, 0x4a, 0xb8, 0xb1, 0x4b, 0xb9, 0xb1, 0x4c, 0xb9, 0xb2,
		0x4c, 0xb9, 0xb2, 0x4d, 0xba, 0xb3, 0x4e, 0xba, 0xb3, 0x4f, 0xbb, 0xb3,
		0x50, 0xbb, 0xb4, 0x51, 0xbb, 0xb4, 0x52, 0xbc, 0xb5, 0x53, 0xbc, 0xb5,
		0x54, 0xbc, 0xb5, 0x55, 0xbd, 0xb6, 0x56, 0xbd, 0xb6, 0x57, 0xbd, 0xb7,
		0x58, 0xbe, 0xb7, 0x59, 0xbe, 0xb8, 0x5a, 0xbf, 0xb9, 0x5c, 0xc0, 0xb9,
		0x5d, 0xc0, 0xb9, 0x5e, 0xc0, 0xba, 0x5f, 0xc1, 0xba, 0x60, 0xc1, 0xbb,
		0x61, 0xc1, 0xbb, 0x62, 0xc2, 0xbb, 0x63, 0xc2, 0xbc, 0x63, 0xc2, 0xbc,
		0x64, 0xc3, 0xbd, 0x65, 0xc3, 0xbd, 0x66, 0xc3, 0xbd, 0x67, 0xc4, 0xbe,
		0x68, 0xc4, 0xbe, 0x69, 0xc5, 0xbf, 0x6b, 0xc5, 0xc0, 0x6d, 0xc6, 0xc0,
		0x6e, 0xc6, 0xc1, 0x6e, 0xc7, 0xc1, 0x6f, 0xc7, 0xc1, 0x70, 0xc7, 0xc2,
		0x71, 0xc8, 0xc2, 0x72, 0xc8, 0xc3, 0x73, 0xc9, 0xc3, 0x74, 0xc9, 0xc3,
		0x75, 0xc9, 0xc4, 0x76, 0xca, 0xc4, 0x77, 0xca, 0xc5, 0x78, 0xca, 0xc5,
		0x79, 0xcb, 0xc6, 0x7a, 0xcb, 0xc6, 0x7b, 0xcc, 0xc7, 0x7c, 0xcc, 0xc7,
		0x7d, 0xcc, 0xc7, 0x7e, 0xcd, 0xc8, 0x7f, 0xcd, 0xc8, 0x80, 0xce, 0xc9,
		0x81, 0xce, 0xc9, 0x82, 0xce, 0xc9, 0x83, 0xcf, 0xca, 0x84, 0xcf, 0xcb,
		0x85, 0xd0, 0xcb, 0x86, 0xd0, 0xcb, 0x87, 0xd0, 0xcc, 0x88, 0xd1, 0xcc,
		0x89, 0xd1, 0xcd, 0x8a, 0xd2, 0xcd, 0x8b, 0xd2, 0xcd, 0x8c, 0xd2, 0xce,
		0x8d, 0xd3, 0xce, 0x8e, 0xd3, 0xce, 0x8f, 0xd3, 0xcf, 0x90, 0xd4, 0xd0,
		0x91, 0xd4, 0xd0, 0x92, 0xd5, 0xd0, 0x93, 0xd5, 0xd1, 0x94, 0xd5, 0xd1,
		0x95, 0xd6, 0xd2, 0x97, 0xd7, 0xd2, 0x98, 0xd7, 0xd3, 0x99, 0xd7, 0xd3,
		0x9a, 0xd8, 0xd4, 0x9b, 0xd8, 0xd4, 0x9c, 0xd9, 0xd5, 0x9e, 0xd9, 0xd6,
		0x9f, 0xda, 0xd6, 0xa0, 0xda, 0xd6, 0xa1, 0xda, 0xd7, 0xa3, 0xdb, 0xd8,
		0xa4, 0xdc, 0xd8, 0xa5, 0xdc, 0xd9, 0xa6, 0xdd, 0xd9, 0xa7, 0xdd, 0xda,
		0xa8, 0xdd, 0xda, 0xa9, 0xde, 0xda, 0xaa, 0xde, 0xdb, 0xab, 0xde, 0xdb,
		0xac, 0xdf, 0xdc, 0xad, 0xdf, 0xdc, 0xae, 0xe0, 0xdc, 0xaf, 0xe0, 0xdd,
		0xb0, 0xe0, 0xdd, 0xb1, 0xe1, 0xde, 0xb1, 0xe1, 0xde, 0xb2, 0xe1, 0xde,
		0xb3, 0xe2, 0xdf, 0xb4, 0xe2, 0xdf, 0xb5, 0xe2, 0xe0, 0xb6, 0xe3, 0xe0,
		0xb7, 0xe3, 0xe0, 0xb8, 0xe3, 0xe1, 0xb9, 0xe4, 0xe1, 0xba, 0xe4, 0xe2,
		0xbb, 0xe5, 0xe2, 0xbc, 0xe5, 0xe3, 0xbd, 0xe6, 0xe3, 0xbe, 0xe6, 0xe4,
		0xbf, 0xe6, 0xe4, 0xc0, 0xe7, 0xe4, 0xc1, 0xe7, 0xe5, 0xc2, 0xe7, 0xe5,
		0xc3, 0xe8, 0xe6, 0xc4, 0xe8, 0xe6, 0xc5, 0xe9, 0xe7, 0xc7, 0xe9, 0xe7,
		0xc8, 0xea, 0xe8, 0xc8, 0xea, 0xe8, 0xc9, 0xea, 0xe8, 0xca, 0xeb, 0xe9,
		0xcb, 0xeb, 0xe9, 0xcc, 0xeb, 0xea, 0xcd, 0xec, 0xea, 0xce, 0xec, 0xea,
		0xcf, 0xec, 0xeb, 0xd0, 0xed, 0xeb, 0xd1, 0xed, 0xec, 0xd2, 0xee, 0xec,
		0xd3, 0xee, 0xed, 0xd4, 0xef, 0xed, 0xd5, 0xef, 0xee, 0xd6, 0xef, 0xee,
		0xd7, 0xf0, 0xee, 0xd8, 0xf0, 0xef, 0xd9, 0xf0, 0xef, 0xda, 0xf1, 0xf0,
		0xdb, 0xf1, 0xf0, 0xdc, 0xf1, 0xf0, 0xdd, 0xf2, 0xf1, 0xde, 0xf2, 0xf1,
		0xde, 0xf3, 0xf2, 0xdf, 0xf3, 0xf2, 0xe0, 0xf3, 0xf2, 0xe1, 0xf4, 0xf3,
		0xe2, 0xf4, 0xf3, 0xe3, 0xf4, 0xf4, 0xe4, 0xf5, 0xf4, 0xe5, 0xf5, 0xf4,
		0xe6, 0xf5, 0xf5, 0xe7, 0xf6, 0xf5, 0xe8, 0xf6, 0xf6, 0xe9, 0xf7, 0xf6,
		0xea, 0xf7, 0xf7, 0xeb, 0xf8, 0xf7, 0xec, 0xf8, 0xf8, 0xed, 0xf8, 0xf8,
		0xee, 0xf9, 0xf8, 0xef, 0xf9, 0xf9, 0xf0, 0xf9, 0xf9, 0xf1, 0xfa, 0xfa,
		0xf0, 0xfa, 0xfa, 0xf2, 0xfa, 0xfa, 0xf3, 0xfa, 0xfa, 0xf4, 0xfb, 0xfb,
		0xf4, 0xfb, 0xfb, 0xf5, 0xfc, 0xfc, 0xf6, 0xfc, 0xfc, 0xf7, 0xfc, 0xfc,
		0xf8, 0xfd, 0xfd, 0xf9, 0xfd, 0xfd, 0xfa, 0xfd, 0xfe, 0xfb, 0xfe, 0xfe,
		0xfc, 0xfe, 0xfe, 0xfd, 0xfe, 0xff, 0xfe, 0xff, 0xff, 0xff, 0xff, 0x78,
		0xc3, 0x16, 0xdd, 0x0, 0x0, 0x6, 0xac, 0x49, 0x44, 0x41, 0x54, 0x68, 0xde,
		0xed, 0xdb, 0xff, 0x57, 0xd3, 0xd7, 0x19, 0x7, 0xf0, 0x37, 0x21, 0x24, 0x21,
		0x81, 0x44, 0xd0, 0x26, 0xa0, 0x80, 0x2d, 0x12, 0x8d, 0x34, 0x88, 0x4a,
		0x51, 0xbb, 0xd5, 0xc1, 0xf8, 0x52, 0x8d, 0xab, 0x20, 0xb2, 0x88, 0x56,
		0xad, 0x52, 0xea, 0xa4, 0x9d, 0x6b, 0x83, 0xe0, 0x97, 0xb6, 0x4c, 0xfc,
		0xd2, 0xb9, 0x62, 0xad, 0x6d, 0xad, 0x4a, 0xb1, 0x22, 0x58, 0xa, 0x6e, 0x2,
		0x2d, 0x5a, 0xbb, 0xb6, 0xd3, 0x54, 0x57, 0xb1, 0x6e, 0x2, 0x7e, 0x1b, 0x8e,
		0xb9, 0x50, 0xc4, 0x12, 0x31, 0x90, 0xf7, 0x1f, 0xb1, 0x1f, 0x12, 0x92,
		0xa0, 0xae, 0x72, 0xe, 0x39, 0xee, 0xc8, 0xb9, 0xf7, 0xb7, 0xcf, 0x7d, 0xf2,
		0x3c, 0xcf, 0x79, 0x9d, 0xdc, 0x9b, 0xcf, 0xfd, 0xe1, 0x6, 0x35, 0x7a, 0x8c,
		0x82, 0x31, 0xb9, 0xe, 0x91, 0x18, 0x15, 0x63, 0x22, 0x0, 0x8e, 0x82, 0x1,
		0x8, 0x88, 0x80, 0x8, 0x88, 0x80, 0x90, 0x64, 0x31, 0x9e, 0x23, 0x49, 0xe,
		0x24, 0xe0, 0xc0, 0x51, 0xcd, 0xb, 0xf, 0xae, 0x58, 0x97, 0x18, 0x3c, 0xff,
		0x7e, 0xf3, 0xd6, 0xd, 0x3, 0xa4, 0x15, 0x49, 0xae, 0xa7, 0xab, 0x31, 0xd3,
		0x7a, 0x1f, 0x2e, 0xe4, 0x9a, 0x14, 0xe7, 0x49, 0xf2, 0x53, 0xe8, 0xee,
		0xbc, 0x81, 0x49, 0xf, 0x2c, 0x78, 0x49, 0xa6, 0x2e, 0x69, 0xbc, 0x5f, 0x20,
		0x1f, 0xe, 0x1f, 0xc8, 0x9, 0x48, 0xae, 0x3c, 0xe4, 0xa5, 0x95, 0x83, 0x42,
		0x92, 0x9c, 0x87, 0x8d, 0xec, 0xab, 0x68, 0x7d, 0x60, 0xc1, 0x2a, 0xac,
		0xbe, 0x7f, 0x20, 0x69, 0x8, 0x84, 0x7f, 0x3a, 0xf9, 0xb0, 0xf7, 0xc8, 0x71,
		0x84, 0xd9, 0xc9, 0xcb, 0x12, 0x69, 0x7, 0xab, 0x91, 0x43, 0xde, 0xd9, 0x38,
		0x5e, 0x1e, 0xff, 0x2e, 0x8f, 0xe2, 0x39, 0xb2, 0x55, 0x3e, 0xc9, 0xc9,
		0x3e, 0xed, 0xb8, 0x7e, 0x6b, 0x9a, 0x26, 0x34, 0xeb, 0x22, 0xc9, 0x97, 0x1,
		0xe0, 0x59, 0x76, 0xae, 0x18, 0x17, 0xa4, 0x7f, 0xd7, 0x49, 0xaa, 0xe7,
		0x36, 0x4d, 0x9, 0xfe, 0x96, 0xfc, 0x5e, 0xb, 0x0, 0x67, 0xad, 0x98, 0x56,
		0xf2, 0x98, 0x26, 0xe7, 0x6, 0x6d, 0xd0, 0x92, 0x9e, 0x2c, 0x9a, 0x54, 0x5f,
		0xcc, 0x95, 0x47, 0xec, 0x24, 0x6f, 0x16, 0xc5, 0xca, 0x62, 0x77, 0x92,
		0x7c, 0x7f, 0xaa, 0xc, 0x80, 0x7e, 0xb0, 0x1d, 0x6b, 0x42, 0x8b, 0x47, 0xba,
		0xd9, 0x13, 0xb0, 0x97, 0x2c, 0x46, 0x2e, 0x5d, 0x90, 0x5, 0x58, 0xfe, 0x8e,
		0x9, 0xbb, 0xee, 0x8c, 0x91, 0xf7, 0xb2, 0xc, 0xf8, 0x9a, 0xd, 0x58, 0xd9,
		0xf7, 0x58, 0xc8, 0xe6, 0xb2, 0xa7, 0x1b, 0x48, 0x76, 0xfe, 0x16, 0x73,
		0x2a, 0x9a, 0x7b, 0x62, 0xb0, 0x64, 0xf3, 0x93, 0xb0, 0x90, 0xea, 0x60,
		0x65, 0x6c, 0xd2, 0x2d, 0xd2, 0x5e, 0x29, 0xc5, 0xfe, 0x8a, 0x2e, 0x2b,
		0x90, 0x68, 0x99, 0x81, 0x95, 0xb4, 0x41, 0x4b, 0x6f, 0x16, 0x4d, 0x50,
		0x17, 0x6d, 0xf, 0xc7, 0xe7, 0x2c, 0x53, 0xe5, 0xbe, 0x3a, 0x19, 0x55, 0xac,
		0xc3, 0xec, 0xbd, 0xab, 0xa0, 0xfb, 0x60, 0xb0, 0x1d, 0x5f, 0x47, 0xc6,
		0x48, 0x21, 0x7b, 0x30, 0x9b, 0x8e, 0x8, 0x9c, 0x74, 0x41, 0x9a, 0x30, 0x8f,
		0xec, 0x8f, 0x8c, 0x66, 0x1e, 0x8e, 0x32, 0x39, 0x1e, 0x16, 0xbe, 0x82,
		0xa3, 0x97, 0x10, 0xd7, 0xe5, 0xfe, 0x74, 0x5, 0xcc, 0xe4, 0x46, 0xac, 0x22,
		0xbb, 0x42, 0x3, 0xaf, 0x52, 0x8d, 0x72, 0x77, 0x40, 0xe6, 0x5a, 0x5a, 0x86,
		0x7e, 0x5e, 0x41, 0x14, 0x6d, 0xd0, 0xd2, 0x27, 0xcb, 0x84, 0x4a, 0xf2,
		0x8f, 0x58, 0x4c, 0x3a, 0xc9, 0x13, 0x30, 0x73, 0x2d, 0x4e, 0x90, 0xea,
		0x78, 0x6f, 0x3b, 0x47, 0x83, 0x6d, 0xa4, 0x10, 0x7b, 0x38, 0xce, 0x1e,
		0x46, 0x22, 0x5d, 0x90, 0xdf, 0x43, 0x22, 0x93, 0xc9, 0x10, 0xc4, 0x23,
		0x28, 0xfc, 0x27, 0xb6, 0xcd, 0x30, 0x70, 0x8a, 0xe6, 0x8e, 0x73, 0x16,
		0x94, 0xd9, 0xf5, 0x5e, 0x48, 0x3a, 0x2a, 0x49, 0x3e, 0x83, 0x6a, 0xaa,
		0x61, 0x1f, 0xa, 0x49, 0x22, 0x1d, 0x50, 0xd2, 0x6, 0x2d, 0x7d, 0xb2, 0x4c,
		0xa8, 0x27, 0x4f, 0x60, 0x3a, 0xfb, 0xf7, 0xa4, 0xe9, 0x64, 0x48, 0x65,
		0x39, 0x5e, 0xe9, 0xfe, 0x14, 0xcf, 0x7b, 0xdb, 0xf9, 0xe3, 0x3d, 0xf2,
		0x3b, 0xac, 0x59, 0x80, 0xf7, 0xdc, 0x90, 0xed, 0x58, 0xda, 0xd2, 0xd2,
		0xd2, 0xd2, 0x46, 0xbb, 0xca, 0x50, 0x8e, 0xb6, 0x52, 0x7c, 0x86, 0x3c,
		0xd2, 0x5e, 0x9e, 0x2a, 0xc1, 0x3b, 0x1e, 0x48, 0x1a, 0xe, 0xe, 0x3, 0xe2,
		0x93, 0x65, 0x42, 0x3d, 0xd9, 0x80, 0x64, 0xfe, 0x1a, 0xb9, 0x75, 0x1f,
		0x21, 0x85, 0xce, 0x5c, 0x0, 0xe9, 0x37, 0xbc, 0xed, 0xfc, 0x1, 0x69, 0x97,
		0x44, 0x2a, 0xc7, 0xda, 0xdd, 0x90, 0x6f, 0x10, 0xd7, 0x47, 0xf6, 0xf4,
		0x92, 0x39, 0x48, 0x4e, 0xe4, 0x5, 0xcc, 0xc2, 0x11, 0xba, 0x7e, 0x9f, 0x17,
		0x79, 0x20, 0x9b, 0x91, 0x4f, 0x76, 0x85, 0x4a, 0xaf, 0xf9, 0x40, 0xe4,
		0xb0, 0xdf, 0xd, 0xf1, 0x66, 0x99, 0x50, 0x4b, 0x5a, 0xf0, 0x62, 0x4f, 0x40,
		0x1c, 0xf9, 0x15, 0x52, 0xf8, 0x37, 0xf9, 0xaf, 0x2a, 0xff, 0xda, 0x4b,
		0x6f, 0xbb, 0xfe, 0xa6, 0xee, 0x91, 0xbf, 0xd9, 0x17, 0x0, 0x16, 0xba, 0x21,
		0x5c, 0x86, 0x84, 0xf5, 0xf9, 0x9a, 0x2c, 0xf2, 0x20, 0x50, 0x4a, 0x1a,
		0xa0, 0xb2, 0xf3, 0xf2, 0x13, 0x85, 0xfb, 0xb2, 0xb1, 0xcb, 0x3, 0xb9, 0x15,
		0x3, 0xf3, 0x86, 0xa9, 0x28, 0xa2, 0xf, 0x44, 0x8f, 0xac, 0x9c, 0xde, 0x21,
		0x10, 0x9f, 0x2c, 0x13, 0x22, 0x4a, 0x56, 0x4b, 0x14, 0xed, 0x3, 0x6a, 0xd5,
		0xe1, 0x4f, 0xf4, 0x48, 0xe1, 0xf7, 0xa1, 0x0, 0x2, 0x52, 0x3b, 0x3c, 0xed,
		0xde, 0x44, 0xe6, 0xc8, 0x21, 0x8d, 0x90, 0x5c, 0xf6, 0x40, 0x1c, 0x5b,
		0x63, 0x2, 0xc7, 0x9a, 0x5b, 0xc9, 0x5b, 0xa, 0xe9, 0x3f, 0xc8, 0x37, 0xb0,
		0x88, 0xbc, 0x51, 0x10, 0x21, 0x8b, 0xdd, 0xe6, 0xdd, 0x23, 0xfc, 0xd7,
		0xf2, 0xb1, 0x52, 0xfd, 0x6e, 0xa7, 0x2f, 0xe4, 0xd8, 0x44, 0xe5, 0x33,
		0x17, 0x87, 0x40, 0x7c, 0xb2, 0x4c, 0x78, 0x3e, 0x56, 0x96, 0x64, 0x25,
		0x3f, 0x99, 0x18, 0x64, 0xdc, 0x97, 0x90, 0xc2, 0xd2, 0xe0, 0xdd, 0x87,
		0xde, 0x4f, 0x83, 0xc5, 0xd3, 0xae, 0x4a, 0x65, 0x79, 0x14, 0xce, 0x5a,
		0x26, 0xd4, 0xf, 0x9d, 0x50, 0x25, 0x91, 0x3c, 0xe6, 0x7a, 0x17, 0x3f, 0x4a,
		0x87, 0xc6, 0x7b, 0x20, 0x69, 0x58, 0xb3, 0xa7, 0x2c, 0x3a, 0xbc, 0xf5,
		0x91, 0x87, 0xd8, 0x5e, 0x8e, 0x55, 0x4c, 0x30, 0x5f, 0x14, 0xc7, 0x78, 0x1,
		0x11, 0x10, 0x1, 0x11, 0x10, 0x1, 0x11, 0x10, 0x1, 0x11, 0x10, 0x1, 0x11,
		0x10, 0x1, 0x11, 0x10, 0x1, 0x11, 0x10, 0x1, 0x11, 0x10, 0x1, 0x11, 0x10,
		0x1, 0x11, 0x10, 0x1, 0x11, 0x10, 0x1, 0x11, 0x10, 0x1, 0x11, 0x10, 0x1,
		0x11, 0x10, 0x1, 0xf1, 0xe, 0x63, 0xf8, 0x3d, 0x53, 0xdd, 0x25, 0x53, 0x15,
		0xc1, 0x89, 0xdb, 0xfb, 0xfe, 0x47, 0x46, 0xdb, 0xea, 0x28, 0xe9, 0xb8,
		0xc5, 0xad, 0xff, 0x17, 0xc8, 0x6d, 0xe5, 0xc7, 0xde, 0x87, 0xe3, 0xe8,
		0xfc, 0x49, 0x48, 0x47, 0x2c, 0xf4, 0x2b, 0xf3, 0xd, 0xd8, 0x7d, 0x4f, 0x99,
		0xd4, 0x2, 0x92, 0x5f, 0xa8, 0x31, 0xe7, 0xa5, 0x6c, 0x79, 0xd2, 0xf0, 0x9a,
		0xf9, 0x19, 0xf2, 0x25, 0x7c, 0x6a, 0x97, 0x3e, 0x0, 0x32, 0xf, 0x2f, 0xf5,
		0x93, 0xfc, 0x6a, 0xe0, 0xee, 0x40, 0xbf, 0xb2, 0x80, 0xec, 0x8d, 0x44, 0x5,
		0xc9, 0x2b, 0xd7, 0x86, 0xd7, 0xcc, 0x5f, 0x10, 0xe7, 0x6b, 0x91, 0xa1,
		0xa9, 0x67, 0xde, 0xe, 0x6, 0xf0, 0xa5, 0x63, 0xcb, 0x24, 0x99, 0xa1, 0x9e,
		0x4b, 0x2, 0x1, 0x19, 0x4f, 0xcd, 0x56, 0x3e, 0xbe, 0xc9, 0x49, 0xd2, 0x18,
		0x56, 0xa6, 0x1d, 0x6b, 0x19, 0x48, 0x53, 0x5c, 0x24, 0x5f, 0xc3, 0x77,
		0xe4, 0x35, 0x44, 0xdc, 0x76, 0x67, 0xdf, 0x5c, 0x1b, 0x1d, 0x3a, 0xe7,
		0x73, 0xd2, 0x3a, 0x5f, 0x33, 0x66, 0xe9, 0xad, 0xd3, 0x61, 0x0, 0x4a, 0x3f,
		0xc2, 0xc2, 0xbb, 0xa2, 0xb2, 0x9f, 0x93, 0x3b, 0x50, 0x4f, 0x43, 0xea,
		0x32, 0xb5, 0x6e, 0xb, 0x5d, 0xcd, 0xd8, 0x38, 0x4d, 0x3e, 0xe5, 0x43, 0xd2,
		0x90, 0xb5, 0x53, 0x93, 0xe7, 0x7, 0xc8, 0x7e, 0x14, 0x35, 0xac, 0x3f, 0x67,
		0x2b, 0xc2, 0x56, 0xeb, 0x8f, 0xed, 0x7a, 0xcb, 0xfe, 0x29, 0x21, 0xff,
		0xb9, 0x92, 0x8e, 0xcf, 0xbe, 0x65, 0x6c, 0x5c, 0xdd, 0xbe, 0x32, 0x92,
		0x34, 0x62, 0xd1, 0xfe, 0xc, 0xec, 0x6d, 0xc0, 0x6f, 0xd8, 0xab, 0xc9, 0x24,
		0xf9, 0x67, 0x98, 0x48, 0x76, 0x77, 0x76, 0xf6, 0x30, 0x33, 0xa8, 0xec,
		0xd0, 0x53, 0x81, 0x56, 0xae, 0x4b, 0x79, 0xcf, 0x82, 0x22, 0x47, 0xd, 0x72,
		0xac, 0xd7, 0x2d, 0xd8, 0xe1, 0xae, 0x3d, 0x18, 0xf5, 0x40, 0x2, 0x2c, 0xcd,
		0x99, 0x38, 0xe5, 0x6a, 0x76, 0x32, 0xe0, 0xd9, 0xe6, 0xf5, 0x68, 0xa0,
		0x41, 0x1e, 0xb3, 0xaa, 0xd6, 0xf, 0x90, 0x5d, 0x78, 0xe1, 0x2, 0xc9, 0xf2,
		0xc1, 0x6f, 0x7b, 0x27, 0x9a, 0x98, 0x83, 0x4e, 0x52, 0x17, 0x51, 0xed,
		0xba, 0x85, 0x6c, 0xc, 0x23, 0xdb, 0xb1, 0x90, 0xd3, 0x43, 0xba, 0xf7, 0xa0,
		0x89, 0xe4, 0x31, 0x2c, 0x20, 0x99, 0xa, 0x98, 0xcf, 0x23, 0x8f, 0xfc, 0xe,
		0x2b, 0x48, 0x92, 0xe1, 0x3f, 0x63, 0xb, 0xa, 0x48, 0xf, 0xc4, 0x13, 0xf5,
		0x40, 0xb4, 0xe4, 0x61, 0x94, 0xbb, 0x9a, 0xe5, 0xa0, 0x83, 0x9c, 0xb0,
		0x9c, 0x86, 0xe0, 0xab, 0x7e, 0x59, 0x5a, 0x76, 0xb3, 0x14, 0xc9, 0x6d,
		0x6e, 0xc8, 0xc7, 0xb, 0xf5, 0x63, 0x50, 0xeb, 0x82, 0xd4, 0xc7, 0x20, 0x64,
		0xeb, 0xe0, 0x1e, 0x71, 0xe0, 0x69, 0x56, 0x62, 0xc7, 0xf4, 0x69, 0x24,
		0xd9, 0x81, 0x28, 0x7, 0xd9, 0x52, 0x5, 0x73, 0x3d, 0x36, 0x91, 0xb7, 0x91,
		0xc2, 0xab, 0xaf, 0x26, 0x47, 0x5, 0x24, 0xba, 0x20, 0x1f, 0xba, 0xee, 0xcd,
		0x91, 0x9e, 0xa8, 0x2f, 0xa4, 0x16, 0x3b, 0x5c, 0xcd, 0x66, 0xc2, 0x75,
		0xf9, 0xd6, 0xa0, 0xf5, 0xd7, 0x66, 0xb7, 0xbd, 0x85, 0x17, 0x5d, 0xb5,
		0xdf, 0x42, 0x89, 0x75, 0xcb, 0x20, 0x84, 0xfc, 0x66, 0x6, 0xae, 0xbb, 0x21,
		0xe7, 0x90, 0xc7, 0xfe, 0xc7, 0x75, 0x38, 0x40, 0x92, 0xcc, 0xc2, 0x7a,
		0x92, 0x9d, 0x30, 0x9f, 0xc7, 0x52, 0xf2, 0x1c, 0x56, 0xdc, 0xd6, 0x4d,
		0xad, 0xfb, 0xbb, 0xce, 0xd, 0xe9, 0x1e, 0x83, 0x5a, 0x92, 0x67, 0x5b, 0x7,
		0xa3, 0x54, 0xcf, 0xbe, 0xf, 0x64, 0x51, 0xa0, 0xeb, 0xfa, 0x9f, 0xbf, 0x20,
		0x4d, 0x85, 0x7f, 0x39, 0x84, 0x2d, 0xac, 0x44, 0x76, 0xb5, 0x73, 0x19,
		0xce, 0xb4, 0xcd, 0x43, 0x2d, 0xf3, 0xb1, 0xe1, 0xf8, 0xc0, 0x9a, 0x7d,
		0xa7, 0xd3, 0xd5, 0x7d, 0x24, 0x8d, 0x92, 0xd7, 0x8f, 0xcc, 0x41, 0x33,
		0xf9, 0x36, 0xa2, 0x1c, 0x24, 0xc9, 0xce, 0xc9, 0x98, 0x55, 0xbc, 0xe9,
		0x97, 0x58, 0xc2, 0xc, 0xd9, 0xb6, 0xaa, 0xe4, 0xc0, 0xd3, 0x97, 0x90, 0x77,
		0xe3, 0x90, 0x2c, 0x91, 0xd7, 0x11, 0x7f, 0xc0, 0xc6, 0x1a, 0x29, 0xd2, 0xb,
		0x17, 0xcb, 0x52, 0x7, 0xa3, 0xfc, 0x85, 0xa2, 0xa6, 0x4a, 0xef, 0x3, 0xa9,
		0x44, 0x76, 0xb5, 0xf3, 0x54, 0xe0, 0xdc, 0x83, 0x7b, 0xb3, 0xab, 0xfd, 0x6,
		0x69, 0x48, 0x92, 0xe9, 0xd6, 0xf4, 0xd1, 0x9e, 0xa1, 0x30, 0x5e, 0x38,
		0x13, 0x2f, 0x9d, 0xfc, 0x7, 0x45, 0x2d, 0x5b, 0xc, 0xca, 0xcc, 0x1f, 0xa,
		0xb4, 0x8a, 0x99, 0xcd, 0x24, 0x69, 0x4c, 0xce, 0x96, 0x47, 0x1d, 0x20,
		0x79, 0xda, 0xb3, 0x8b, 0x6f, 0x16, 0xc7, 0x5, 0x5, 0x1b, 0xd6, 0x75, 0xb0,
		0xab, 0x60, 0xbc, 0xea, 0xa9, 0x46, 0x72, 0x5d, 0x48, 0xe8, 0x12, 0xf3,
		0x74, 0xd2, 0xa2, 0x1a, 0x5f, 0x4d, 0x7e, 0x3d, 0x3f, 0x4c, 0x1a, 0xbd,
		0xf6, 0xdf, 0x9e, 0xe8, 0xb9, 0x99, 0xf2, 0x84, 0x4d, 0x3e, 0x10, 0x7b,
		0x86, 0xc2, 0x78, 0x81, 0x8d, 0xb3, 0x94, 0x9a, 0x85, 0xed, 0x7e, 0x5c,
		0x5a, 0xc3, 0x1e, 0xb9, 0x9a, 0x9e, 0x51, 0x71, 0xd6, 0x3a, 0x2f, 0xd9,
		0x28, 0xe, 0x8d, 0x2, 0x22, 0x20, 0x2, 0x22, 0x20, 0xc3, 0x84, 0x4c, 0x18,
		0x1d, 0x7f, 0x3a, 0x8e, 0x46, 0x4d, 0xdc, 0x68, 0x70, 0x3c, 0x59, 0xf7,
		0x5f, 0x3e, 0x67, 0x14, 0x23, 0xc2, 0x31, 0xba, 0x90, 0x0, 0x0, 0x0, 0x0,
		0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82}))
	if err != nil {
		panic(err)
	}

	pngImgTotal, _, err = image.Decode(bytes.NewReader([]byte{0x89, 0x50, 0x4e,
		0x47, 0xd, 0xa, 0x1a, 0xa, 0x0, 0x0, 0x0, 0xd, 0x49, 0x48, 0x44, 0x52, 0x0,
		0x0, 0x0, 0xc8, 0x0, 0x0, 0x0, 0x50, 0x8, 0x3, 0x0, 0x0, 0x0, 0x6b, 0xb3,
		0xca, 0x82, 0x0, 0x0, 0x2, 0xb5, 0x50, 0x4c, 0x54, 0x45, 0x9a, 0x15, 0xa4,
		0x9a, 0x16, 0xa4, 0x9b, 0x17, 0xa5, 0x9b, 0x18, 0xa5, 0x9b, 0x19, 0xa5,
		0x9c, 0x1a, 0xa6, 0x9c, 0x1b, 0xa6, 0x9d, 0x1c, 0xa6, 0x9d, 0x1d, 0xa7,
		0x9d, 0x1e, 0xa7, 0x9e, 0x1f, 0xa7, 0x9e, 0x20, 0xa8, 0x9f, 0x20, 0xa8,
		0x9f, 0x21, 0xa9, 0x9f, 0x22, 0xa9, 0xa0, 0x23, 0xa9, 0xa0, 0x24, 0xaa,
		0xa1, 0x25, 0xaa, 0xa1, 0x26, 0xaa, 0xa1, 0x27, 0xab, 0xa2, 0x28, 0xab,
		0xa2, 0x29, 0xab, 0xa3, 0x2a, 0xac, 0xa3, 0x2b, 0xac, 0xa4, 0x2c, 0xad,
		0xa4, 0x2d, 0xad, 0xa5, 0x2f, 0xae, 0xa5, 0x30, 0xae, 0xa6, 0x31, 0xaf,
		0xa6, 0x32, 0xaf, 0xa7, 0x33, 0xaf, 0xa7, 0x34, 0xb0, 0xa7, 0x35, 0xb0,
		0xa8, 0x36, 0xb0, 0xa8, 0x36, 0xb1, 0xa9, 0x37, 0xb1, 0xa9, 0x38, 0xb2,
		0xa9, 0x39, 0xb2, 0xaa, 0x3a, 0xb2, 0xaa, 0x3b, 0xb3, 0xab, 0x3c, 0xb3,
		0xab, 0x3d, 0xb3, 0xab, 0x3e, 0xb4, 0xac, 0x3f, 0xb4, 0xac, 0x40, 0xb4,
		0xad, 0x41, 0xb5, 0xad, 0x42, 0xb5, 0xae, 0x43, 0xb6, 0xae, 0x44, 0xb6,
		0xaf, 0x45, 0xb7, 0xaf, 0x46, 0xb7, 0xaf, 0x47, 0xb7, 0xb0, 0x48, 0xb8,
		0xb0, 0x49, 0xb8, 0xb1, 0x4a, 0xb8, 0xb1, 0x4b, 0xb9, 0xb1, 0x4c, 0xb9,
		0xb2, 0x4c, 0xb9, 0xb2, 0x4d, 0xba, 0xb3, 0x4e, 0xba, 0xb3, 0x4f, 0xbb,
		0xb3, 0x50, 0xbb, 0xb4, 0x51, 0xbb, 0xb4, 0x52, 0xbc, 0xb5, 0x53, 0xbc,
		0xb5, 0x54, 0xbc, 0xb5, 0x55, 0xbd, 0xb6, 0x56, 0xbd, 0xb6, 0x57, 0xbd,
		0xb7, 0x58, 0xbe, 0xb7, 0x59, 0xbe, 0xb8, 0x5a, 0xbf, 0xb9, 0x5c, 0xc0,
		0xb9, 0x5d, 0xc0, 0xb9, 0x5e, 0xc0, 0xba, 0x60, 0xc1, 0xbb, 0x61, 0xc1,
		0xbb, 0x62, 0xc2, 0xbb, 0x63, 0xc2, 0xbc, 0x63, 0xc2, 0xbc, 0x64, 0xc3,
		0xbd, 0x65, 0xc3, 0xbd, 0x66, 0xc3, 0xbe, 0x68, 0xc4, 0xbe, 0x69, 0xc5,
		0xbf, 0x6a, 0xc5, 0xbf, 0x6b, 0xc5, 0xc0, 0x6d, 0xc6, 0xc0, 0x6e, 0xc6,
		0xc1, 0x6f, 0xc7, 0xc1, 0x70, 0xc7, 0xc2, 0x71, 0xc8, 0xc2, 0x72, 0xc8,
		0xc3, 0x73, 0xc9, 0xc3, 0x74, 0xc9, 0xc3, 0x75, 0xc9, 0xc4, 0x76, 0xca,
		0xc4, 0x77, 0xca, 0xc5, 0x78, 0xca, 0xc5, 0x79, 0xcb, 0xc6, 0x7a, 0xcb,
		0xc6, 0x7b, 0xcc, 0xc7, 0x7c, 0xcc, 0xc7, 0x7d, 0xcc, 0xc7, 0x7e, 0xcd,
		0xc8, 0x7f, 0xcd, 0xc8, 0x80, 0xce, 0xc9, 0x81, 0xce, 0xc9, 0x82, 0xce,
		0xc9, 0x83, 0xcf, 0xca, 0x84, 0xcf, 0xcb, 0x85, 0xd0, 0xcb, 0x86, 0xd0,
		0xcb, 0x87, 0xd0, 0xcc, 0x88, 0xd1, 0xcc, 0x89, 0xd1, 0xcd, 0x8a, 0xd2,
		0xcd, 0x8b, 0xd2, 0xcd, 0x8c, 0xd2, 0xce, 0x8d, 0xd3, 0xce, 0x8e, 0xd3,
		0xce, 0x8f, 0xd3, 0xcf, 0x90, 0xd4, 0xd0, 0x91, 0xd4, 0xd0, 0x92, 0xd5,
		0xd0, 0x93, 0xd5, 0xd1, 0x94, 0xd5, 0xd1, 0x95, 0xd6, 0xd2, 0x97, 0xd7,
		0xd2, 0x98, 0xd7, 0xd3, 0x99, 0xd7, 0xd3, 0x9a, 0xd8, 0xd4, 0x9b, 0xd8,
		0xd4, 0x9c, 0xd9, 0xd5, 0x9e, 0xd9, 0xd6, 0x9f, 0xda, 0xd6, 0xa0, 0xda,
		0xd6, 0xa1, 0xda, 0xd7, 0xa3, 0xdb, 0xd8, 0xa4, 0xdc, 0xd8, 0xa5, 0xdc,
		0xd9, 0xa6, 0xdd, 0xd9, 0xa7, 0xdd, 0xda, 0xa9, 0xde, 0xda, 0xaa, 0xde,
		0xdb, 0xab, 0xde, 0xdb, 0xac, 0xdf, 0xdc, 0xad, 0xdf, 0xdc, 0xae, 0xe0,
		0xdc, 0xaf, 0xe0, 0xdd, 0xb0, 0xe0, 0xdd, 0xb1, 0xe1, 0xde, 0xb1, 0xe1,
		0xde, 0xb2, 0xe1, 0xde, 0xb3, 0xe2, 0xdf, 0xb4, 0xe2, 0xdf, 0xb5, 0xe2,
		0xe0, 0xb6, 0xe3, 0xe0, 0xb7, 0xe3, 0xe1, 0xb9, 0xe4, 0xe1, 0xba, 0xe4,
		0xe2, 0xbb, 0xe5, 0xe2, 0xbc, 0xe5, 0xe3, 0xbd, 0xe6, 0xe3, 0xbe, 0xe6,
		0xe4, 0xbf, 0xe6, 0xe4, 0xc0, 0xe7, 0xe4, 0xc1, 0xe7, 0xe5, 0xc2, 0xe7,
		0xe5, 0xc3, 0xe8, 0xe6, 0xc4, 0xe8, 0xe6, 0xc5, 0xe9, 0xe7, 0xc7, 0xe9,
		0xe7, 0xc8, 0xea, 0xe8, 0xc8, 0xea, 0xe8, 0xc9, 0xea, 0xe8, 0xca, 0xeb,
		0xe9, 0xcb, 0xeb, 0xe9, 0xcc, 0xeb, 0xea, 0xcd, 0xec, 0xea, 0xce, 0xec,
		0xea, 0xcf, 0xec, 0xeb, 0xd1, 0xed, 0xec, 0xd2, 0xee, 0xec, 0xd3, 0xee,
		0xed, 0xd4, 0xef, 0xed, 0xd5, 0xef, 0xee, 0xd6, 0xef, 0xee, 0xd8, 0xf0,
		0xef, 0xd9, 0xf0, 0xef, 0xda, 0xf1, 0xf0, 0xdb, 0xf1, 0xf0, 0xdc, 0xf1,
		0xf0, 0xdd, 0xf2, 0xf1, 0xde, 0xf2, 0xf1, 0xde, 0xf3, 0xf2, 0xdf, 0xf3,
		0xf2, 0xe0, 0xf3, 0xf2, 0xe1, 0xf4, 0xf3, 0xe2, 0xf4, 0xf3, 0xe3, 0xf4,
		0xf4, 0xe4, 0xf5, 0xf4, 0xe5, 0xf5, 0xf4, 0xe6, 0xf5, 0xf5, 0xe7, 0xf6,
		0xf5, 0xe8, 0xf6, 0xf6, 0xe9, 0xf7, 0xf6, 0xea, 0xf7, 0xf7, 0xeb, 0xf8,
		0xf7, 0xec, 0xf8, 0xf8, 0xed, 0xf8, 0xf8, 0xee, 0xf9, 0xf8, 0xef, 0xf9,
		0xf9, 0xf0, 0xf9, 0xf9, 0xf1, 0xfa, 0xfa, 0xf0, 0xfa, 0xfa, 0xf2, 0xfa,
		0xfa, 0xf3, 0xfa, 0xfa, 0xf4, 0xfb, 0xfb, 0xf4, 0xfb, 0xfb, 0xf5, 0xfc,
		0xfc, 0xf6, 0xfc, 0xfc, 0xf7, 0xfc, 0xfc, 0xf8, 0xfd, 0xfd, 0xf9, 0xfd,
		0xfd, 0xfa, 0xfd, 0xfe, 0xfb, 0xfe, 0xfe, 0xfc, 0xfe, 0xfe, 0xfd, 0xfe,
		0xff, 0xfe, 0xff, 0xff, 0xff, 0xff, 0x89, 0x1d, 0xdb, 0x8b, 0x0, 0x0, 0x6,
		0x57, 0x49, 0x44, 0x41, 0x54, 0x68, 0xde, 0xed, 0xdb, 0xeb, 0x57, 0x54,
		0x55, 0x18, 0x6, 0xf0, 0x47, 0x66, 0x9c, 0x19, 0x6, 0x98, 0x11, 0x2f, 0x5c,
		0x14, 0xa8, 0x14, 0x64, 0xd4, 0x51, 0x54, 0x42, 0x51, 0xbb, 0x90, 0x82,
		0x77, 0x6, 0xa, 0x3, 0x4d, 0x13, 0x51, 0xa4, 0x32, 0x1d, 0x5, 0x21, 0x8b,
		0x44, 0xb2, 0xcc, 0xd1, 0xb2, 0x4c, 0x45, 0x54, 0x4, 0x9, 0x2c, 0x1, 0xc5,
		0xd2, 0x32, 0x1d, 0x6f, 0x43, 0x94, 0xe2, 0x35, 0x88, 0x14, 0x43, 0x91, 0x1,
		0x6, 0xe6, 0xf9, 0x3b, 0xfa, 0x30, 0x57, 0xc5, 0x92, 0xf, 0xe3, 0x6a, 0x2d,
		0xd6, 0xde, 0x9f, 0xde, 0x73, 0xde, 0xfd, 0xee, 0xbd, 0x7e, 0x6b, 0xf6,
		0x9e, 0x73, 0x3e, 0xec, 0x83, 0xb2, 0x8, 0xf4, 0x83, 0x36, 0xba, 0x2, 0xc1,
		0xe8, 0x17, 0xed, 0x39, 0x0, 0xec, 0x7, 0xd, 0x10, 0x10, 0x1, 0x11, 0x10,
		0x1, 0x71, 0xb4, 0x6c, 0x2c, 0x20, 0x49, 0xf6, 0x8c, 0xc7, 0xbe, 0x5b, 0x61,
		0x13, 0xda, 0x9f, 0x3a, 0x6a, 0x45, 0x94, 0xf7, 0xdc, 0x27, 0xdd, 0x37,
		0x6e, 0xec, 0x21, 0x8d, 0x88, 0xb6, 0x5f, 0xce, 0xc, 0x38, 0xdf, 0xbb, 0x4f,
		0x9e, 0xcf, 0xd7, 0xe4, 0xdd, 0xf, 0xae, 0x3c, 0xb, 0xc8, 0x6d, 0x29, 0xea,
		0x48, 0xf2, 0x5b, 0x4, 0x76, 0xfd, 0x0, 0xaf, 0x9b, 0x4f, 0xeb, 0x7f, 0x5d,
		0xa6, 0xca, 0xa9, 0x7e, 0x52, 0x22, 0x1d, 0x16, 0x37, 0x48, 0xa7, 0x12,
		0xfb, 0x7a, 0xf7, 0x89, 0xc3, 0x32, 0xb2, 0x18, 0xc7, 0x9e, 0xc9, 0xd2,
		0x4a, 0x46, 0x16, 0x49, 0xce, 0x41, 0x2e, 0xf9, 0xdd, 0xa9, 0xa7, 0x76,
		0x2f, 0xc1, 0xf2, 0x27, 0x27, 0xa2, 0x1f, 0x81, 0xf0, 0x42, 0xa9, 0xb5,
		0x77, 0x9f, 0xc6, 0x3d, 0xf7, 0xc9, 0xb5, 0xcf, 0x8, 0x72, 0x12, 0xfe, 0x66,
		0xf2, 0x86, 0x97, 0xb4, 0x91, 0x2d, 0x8, 0x20, 0xbb, 0x72, 0x87, 0xcb, 0xc7,
		0x7e, 0xc9, 0xa3, 0x58, 0x40, 0x5e, 0x95, 0x8f, 0xb2, 0xb2, 0x33, 0x60,
		0x68, 0xb7, 0x71, 0xa6, 0xda, 0x2f, 0xf1, 0xa, 0xc9, 0x77, 0x0, 0x60, 0x36,
		0xbb, 0xf2, 0xc3, 0xa4, 0xc1, 0x6b, 0x1f, 0x92, 0xaa, 0x97, 0x6b, 0x22,
		0xbd, 0xcf, 0x93, 0xbf, 0x6, 0x0, 0xc0, 0x45, 0x23, 0x26, 0xe4, 0xc, 0x53,
		0x27, 0xdf, 0x21, 0xb5, 0x30, 0xd1, 0x59, 0xe5, 0x88, 0x32, 0x61, 0xe0,
		0x38, 0x0, 0xd8, 0xc6, 0xa6, 0x37, 0xfd, 0xfd, 0xa6, 0xd7, 0x92, 0x65, 0x7e,
		0xd9, 0x9e, 0xda, 0xec, 0xe3, 0xb1, 0x9b, 0xcc, 0xc6, 0x1b, 0xb4, 0x41,
		0xe6, 0x63, 0xc9, 0xce, 0x79, 0xd8, 0xd1, 0x35, 0x48, 0xde, 0xce, 0x2, 0xe0,
		0xc, 0xab, 0xb0, 0xb4, 0x73, 0x98, 0xef, 0x7, 0x5, 0xd3, 0xaa, 0x48, 0x36,
		0xbf, 0x87, 0xd8, 0xa2, 0x5a, 0xea, 0x30, 0x63, 0xd3, 0x6c, 0xc4, 0x5a,
		0xa9, 0xf2, 0x56, 0x8e, 0x8c, 0x6e, 0x23, 0xcd, 0xc5, 0x52, 0xec, 0x2d,
		0xba, 0x67, 0x4, 0xa2, 0xf4, 0x93, 0xb0, 0x94, 0xd4, 0xc2, 0xe4, 0xaa, 0x72,
		0x44, 0x99, 0x30, 0xb0, 0x52, 0x8b, 0xf5, 0x45, 0xf5, 0xf7, 0x47, 0x28,
		0xb3, 0x3f, 0x1f, 0x37, 0xf0, 0x3c, 0x37, 0x21, 0xde, 0x53, 0x90, 0x5d,
		0x98, 0x4a, 0x4b, 0x10, 0x4e, 0xd9, 0x20, 0x35, 0x98, 0x43, 0x76, 0x7, 0x87,
		0x32, 0x15, 0x47, 0x19, 0x33, 0x16, 0x7a, 0xbe, 0x8b, 0xa3, 0xd7, 0x11,
		0x7e, 0xcf, 0xde, 0xbb, 0x8, 0x29, 0xe4, 0x9, 0x44, 0xf6, 0x90, 0x33, 0xb0,
		0x9f, 0x2a, 0x18, 0xec, 0x9, 0x99, 0x6d, 0x69, 0x69, 0xba, 0x79, 0x13, 0x21,
		0xa4, 0x16, 0x26, 0x57, 0x95, 0x23, 0xca, 0x84, 0x81, 0x9c, 0x85, 0x63,
		0x64, 0xe, 0xa, 0xc9, 0x3a, 0xa4, 0xd1, 0x52, 0xd5, 0xe2, 0x29, 0x88, 0x79,
		0x30, 0x2e, 0x1e, 0x46, 0x14, 0x6d, 0x90, 0x8f, 0xe1, 0x25, 0x93, 0xc9,
		0x30, 0x90, 0x47, 0x90, 0xf5, 0x7, 0xa, 0x27, 0x69, 0x18, 0xa9, 0xee, 0xb2,
		0x4e, 0x81, 0x52, 0x57, 0xe9, 0x82, 0xe4, 0x23, 0x9d, 0x64, 0x2e, 0x32,
		0xa9, 0x82, 0xf9, 0x51, 0x48, 0x34, 0x69, 0x81, 0x92, 0xd4, 0xc2, 0xe4,
		0xaa, 0x72, 0x44, 0x2e, 0x48, 0x3c, 0xa4, 0x32, 0x99, 0xc, 0x33, 0x3d, 0xfa,
		0x1c, 0x79, 0x1f, 0xab, 0xe6, 0xe3, 0x2b, 0x3b, 0xe4, 0x13, 0xa4, 0x99,
		0x4c, 0x26, 0x53, 0x3, 0xcd, 0x3e, 0x1a, 0x3, 0x1a, 0xf2, 0x71, 0x1c, 0xa9,
		0xa4, 0xd9, 0x10, 0xe7, 0x85, 0x9d, 0x6e, 0x90, 0x15, 0x7d, 0x80, 0xb8,
		0x55, 0xd9, 0x23, 0x17, 0x64, 0x2e, 0xb6, 0x9b, 0x4c, 0x26, 0x53, 0x93,
		0x47, 0x21, 0xd7, 0xbc, 0x82, 0x95, 0x43, 0xcc, 0x76, 0xc8, 0x2f, 0x8, 0xef,
		0x24, 0x1f, 0xb4, 0x93, 0xc9, 0x88, 0x89, 0x62, 0x3d, 0xa6, 0xe0, 0x8, 0x6d,
		0xff, 0xcf, 0x49, 0x4e, 0x48, 0x2d, 0x34, 0x56, 0x72, 0x6, 0xe, 0xb8, 0x41,
		0xe4, 0x30, 0x3f, 0xe, 0x71, 0x55, 0xd9, 0xa3, 0x4c, 0x18, 0xc8, 0x78, 0x54,
		0x92, 0x85, 0x48, 0x23, 0xf9, 0xa7, 0x95, 0xdd, 0x35, 0xad, 0x9e, 0x7b,
		0xb2, 0xcf, 0x7, 0xf4, 0xb4, 0x43, 0xb8, 0x18, 0xe3, 0x37, 0xa4, 0xab, 0x13,
		0xc9, 0x3, 0x40, 0x3e, 0xa9, 0x81, 0x8f, 0x99, 0x37, 0x5e, 0xc8, 0xda, 0xa3,
		0xc3, 0xe, 0x27, 0x84, 0x3a, 0x4c, 0xcf, 0x4d, 0xc0, 0x34, 0xab, 0x1b, 0x24,
		0x2, 0x89, 0xc9, 0xed, 0x8f, 0x40, 0x5c, 0x55, 0x8e, 0x28, 0x13, 0x6, 0x72,
		0x39, 0xa2, 0x93, 0x2e, 0x75, 0x8c, 0xc6, 0xec, 0x8d, 0xc9, 0x92, 0xcf,
		0xf9, 0x11, 0x12, 0x3c, 0x7, 0xa9, 0x86, 0xd7, 0xd, 0x27, 0xc4, 0xb2, 0x25,
		0x4c, 0x32, 0x24, 0xe5, 0x2a, 0xd9, 0xa6, 0x90, 0xfe, 0x4e, 0x7e, 0x88,
		0x24, 0xf2, 0x4e, 0x46, 0x90, 0x6c, 0x64, 0xa1, 0x6b, 0x8f, 0xb0, 0x2b,
		0x3f, 0x54, 0x12, 0xf4, 0x7e, 0x1b, 0xdd, 0x20, 0xc7, 0x9e, 0x53, 0xbe,
		0x74, 0xe5, 0x11, 0x88, 0xab, 0xca, 0x11, 0x65, 0xc2, 0x40, 0x5e, 0x8f,
		0x51, 0x68, 0x2a, 0x79, 0x67, 0xf9, 0x50, 0x49, 0xe8, 0xda, 0x36, 0x96,
		0xf8, 0xe8, 0xc5, 0xbb, 0x96, 0x80, 0x8, 0x88, 0x80, 0x8, 0x88, 0x80, 0x8,
		0x88, 0x80, 0x8, 0x88, 0x80, 0x8, 0x88, 0x80, 0x8, 0x88, 0x80, 0x8, 0x88,
		0x80, 0x8, 0x88, 0x80, 0x8, 0x88, 0x80, 0x8, 0x88, 0x80, 0x8, 0x88, 0x80,
		0x8, 0x88, 0x80, 0x8, 0x88, 0x80, 0x8, 0x88, 0x80, 0x8, 0x88, 0x80, 0x3c,
		0x2b, 0x88, 0x76, 0x70, 0xaf, 0x5b, 0xad, 0x39, 0x63, 0x14, 0xde, 0x51,
		0x9f, 0x74, 0xfe, 0x4b, 0x45, 0xc3, 0xf2, 0x10, 0xe9, 0xd0, 0xd7, 0xaf,
		0xfe, 0x2f, 0x90, 0xe, 0xe5, 0x41, 0xd7, 0xc5, 0x49, 0x34, 0xff, 0x27, 0xa4,
		0x71, 0x24, 0x22, 0x96, 0xa6, 0x6b, 0xf0, 0x45, 0xaf, 0x61, 0xe2, 0x32,
		0x48, 0xfe, 0xa8, 0x42, 0xec, 0x4a, 0x9d, 0x3c, 0xba, 0x6f, 0x93, 0x79,
		0x18, 0x72, 0x1a, 0x6e, 0x63, 0xe7, 0x3f, 0x5, 0x32, 0x7, 0x2b, 0xbb, 0x49,
		0xfe, 0xdc, 0xf3, 0x78, 0xa2, 0x5b, 0x99, 0x41, 0xb6, 0x7, 0xa3, 0x88, 0xe4,
		0xcd, 0xdb, 0x7d, 0x9b, 0xcc, 0x53, 0x10, 0xeb, 0xba, 0x60, 0xbf, 0xb8, 0xb,
		0xdb, 0xbd, 0x1, 0x9c, 0xb6, 0x6c, 0x1e, 0x25, 0xd3, 0x54, 0x72, 0x91, 0x4,
		0x90, 0xf1, 0xec, 0x54, 0xe5, 0xf3, 0x79, 0x56, 0x92, 0x5a, 0xff, 0x82,
		0x80, 0x21, 0xfa, 0x9e, 0x99, 0x8a, 0x2b, 0xe4, 0x3a, 0x5c, 0x22, 0x6f,
		0x23, 0xa8, 0xc3, 0x5e, 0x7d, 0x7f, 0x75, 0xa8, 0x5f, 0xec, 0x9, 0xd2, 0x38,
		0x57, 0x3d, 0x28, 0xad, 0xed, 0x9c, 0x3f, 0x80, 0xfc, 0xfd, 0x58, 0xf8,
		0x58, 0x56, 0x36, 0x83, 0xdc, 0x8a, 0x4a, 0x6a, 0xe2, 0x16, 0xab, 0x2, 0x37,
		0xd3, 0x36, 0x19, 0xab, 0x27, 0xc8, 0x23, 0xbf, 0x21, 0x35, 0x89, 0xdb,
		0xd4, 0xa9, 0x1e, 0x80, 0xec, 0xc5, 0xfa, 0xaa, 0xd, 0x97, 0x5b, 0xd6, 0x63,
		0x8b, 0xf1, 0xe1, 0xb5, 0x8, 0xfd, 0xde, 0x48, 0xdf, 0xbb, 0x37, 0x67, 0xe1,
		0xf8, 0x79, 0x8e, 0xc, 0xaf, 0xd8, 0x53, 0x40, 0x92, 0x5a, 0x24, 0xed, 0x8d,
		0xc7, 0xee, 0x2a, 0x64, 0xb2, 0x5d, 0x9d, 0x40, 0xf2, 0x7b, 0xcc, 0x23,
		0xd9, 0xda, 0xdc, 0xfc, 0x80, 0x9, 0x3, 0xb, 0xe, 0xbd, 0x28, 0x31, 0x72,
		0xcd, 0xab, 0x5f, 0xe9, 0xb1, 0xde, 0x52, 0x86, 0x64, 0x63, 0x93, 0x1e,
		0x5b, 0xed, 0x63, 0x3b, 0xb2, 0x4e, 0xc8, 0x0, 0x7d, 0x6d, 0x2, 0xce, 0xda,
		0x26, 0x3b, 0x35, 0x60, 0x76, 0xed, 0x6, 0x54, 0x51, 0x23, 0xf, 0x7b, 0xbb,
		0xdc, 0x3, 0x90, 0x1d, 0x58, 0x56, 0x4f, 0xd2, 0xe0, 0xf8, 0xb5, 0xb7, 0xa1,
		0x86, 0xc9, 0x68, 0x26, 0x3, 0x83, 0x4a, 0x6d, 0x87, 0x99, 0xb5, 0xfe, 0xe4,
		0x35, 0x2c, 0xe4, 0x44, 0xdf, 0xd6, 0x5d, 0xa8, 0x21, 0x79, 0xc, 0xf3, 0x49,
		0xc6, 0x1, 0x29, 0x75, 0x48, 0x25, 0x2f, 0xe1, 0x2d, 0x92, 0xe4, 0xe0, 0xe9,
		0x34, 0x21, 0x83, 0x74, 0x42, 0x9c, 0x59, 0x27, 0x24, 0x80, 0x3c, 0xc, 0x83,
		0x6d, 0xb2, 0x64, 0x34, 0x92, 0x23, 0x96, 0x50, 0xe3, 0x7d, 0xcb, 0x23,
		0x4b, 0xcb, 0x9c, 0x22, 0x45, 0x4c, 0x83, 0x1d, 0x72, 0x70, 0x61, 0xc4,
		0x20, 0x94, 0xdb, 0x20, 0x95, 0x61, 0xf0, 0xdd, 0xe2, 0xd8, 0x23, 0x16,
		0x4c, 0x63, 0x31, 0xb6, 0x4e, 0x9c, 0x40, 0x92, 0x8d, 0x8, 0xb1, 0x90, 0xa6,
		0x12, 0xa4, 0x54, 0x22, 0x8f, 0xec, 0xc0, 0xab, 0xbc, 0xb5, 0x36, 0x26,
		0x64, 0x40, 0x94, 0xd, 0xf2, 0x8d, 0xe3, 0xcc, 0x9c, 0x33, 0xeb, 0xe, 0x29,
		0xc7, 0x56, 0xdb, 0x64, 0x93, 0x61, 0x3b, 0x78, 0xab, 0x9, 0xf0, 0xd4, 0x66,
		0x6f, 0xf9, 0x14, 0x2b, 0x6c, 0x63, 0x7f, 0x8a, 0x1c, 0xe3, 0x66, 0x7, 0x84,
		0xfc, 0x65, 0x12, 0x9a, 0xec, 0x90, 0xcb, 0x48, 0x65, 0xf7, 0xf3, 0x81,
		0xf6, 0xc3, 0xd5, 0x89, 0xd8, 0x40, 0xb2, 0x19, 0x29, 0x75, 0x48, 0x23,
		0x2f, 0xe3, 0xad, 0x8e, 0xc0, 0x31, 0x15, 0xbf, 0x5, 0xda, 0x21, 0xad, 0x83,
		0x50, 0x4e, 0xf2, 0xe2, 0x55, 0x47, 0x96, 0xaa, 0xa9, 0x4f, 0x80, 0x24,
		0x49, 0x6c, 0x47, 0x0, 0x3d, 0x5, 0xa9, 0xc9, 0xfa, 0xe9, 0x10, 0x36, 0xb3,
		0x18, 0xba, 0x52, 0xeb, 0x62, 0x5c, 0x68, 0x98, 0x83, 0x72, 0xa6, 0x63,
		0xe3, 0xc9, 0x9e, 0x55, 0x7b, 0xce, 0xcd, 0x52, 0x75, 0x92, 0xd4, 0x7a,
		0x6d, 0x3a, 0x12, 0x8b, 0x5a, 0x72, 0x3b, 0x42, 0x2c, 0x24, 0xc9, 0xe6,
		0xd1, 0x98, 0x92, 0x9d, 0xf7, 0x1a, 0x16, 0x31, 0x5e, 0x56, 0x58, 0x12,
		0x23, 0x39, 0x77, 0x1d, 0xa9, 0x77, 0xe, 0xc9, 0xa2, 0xd8, 0x84, 0xb1, 0xfb,
		0x5a, 0x58, 0x26, 0xc5, 0xac, 0xac, 0xd7, 0x65, 0x71, 0x8e, 0x2c, 0x5f,
		0x51, 0x94, 0x95, 0x44, 0xb8, 0x41, 0x8a, 0xa1, 0x2b, 0xb5, 0x9e, 0x95,
		0xbc, 0x7c, 0x60, 0xb7, 0xae, 0xd4, 0x63, 0x90, 0xaa, 0x68, 0x59, 0xe0,
		0xaa, 0x4e, 0x9a, 0xe3, 0x15, 0xda, 0xfa, 0xb, 0x63, 0xa5, 0xa3, 0x3f, 0x53,
		0x94, 0xd3, 0xa4, 0x51, 0x26, 0xfc, 0x9d, 0x11, 0xa0, 0x98, 0x5c, 0x4b,
		0x92, 0xda, 0x18, 0x9d, 0x3c, 0x64, 0x1f, 0xc9, 0x73, 0xce, 0x5d, 0x7c,
		0x3f, 0x3b, 0x7c, 0xa0, 0xb7, 0x66, 0x4d, 0x23, 0xef, 0x65, 0xc, 0xf7, 0x79,
		0xb1, 0x9a, 0x5c, 0xe3, 0xeb, 0xb7, 0x28, 0x65, 0x22, 0xa9, 0xf7, 0x19,
		0x5e, 0x4a, 0x9e, 0x99, 0xeb, 0x2f, 0xd, 0x5d, 0xfd, 0x97, 0x33, 0x7b, 0x79,
		0xb2, 0x7c, 0x7c, 0x9e, 0x1b, 0xc4, 0x1c, 0xaf, 0xd0, 0xd6, 0xb3, 0x7a,
		0x8a, 0x52, 0xbd, 0xf0, 0x9a, 0x7, 0x97, 0x56, 0x9f, 0xdb, 0x1b, 0xea, 0x7,
		0xfd, 0xe2, 0x5d, 0xab, 0xce, 0x2b, 0x57, 0xbc, 0x34, 0xa, 0x88, 0x80, 0x8,
		0x88, 0x80, 0xf4, 0x11, 0x32, 0xa2, 0x7f, 0x7c, 0x74, 0x1c, 0x8a, 0xb2,
		0xf0, 0xfe, 0xe0, 0x18, 0x57, 0xf1, 0xf, 0xce, 0x45, 0x0, 0x69, 0x61, 0xe,
		0xb, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60,
		0x82}))
	if err != nil {
		panic(err)
	}
}
