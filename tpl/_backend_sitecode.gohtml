<pre>&lt;script&gt;
	(function() {
		var script = document.createElement('script');
		window.counter = '{{.Site.URL}}/count'
		script.async = 1;
		script.src = '//{{.Static}}/count.js';

		var ins = document.getElementsByTagName('script')[0];
		ins.parentNode.insertBefore(script, ins)
	})();
&lt;/script&gt;</pre>

{{if eq .Path "/settings"}}

<p>The script is quite small and you can inline it if you want for slightly
	better performance. You won’t get any updates, but it’s expected to remain
	compatible in the foreseeable future. Just be sure to set
	<code>window.counter</code> as in the above snippet.</p>

<h3>Customizing</h3>

<p>You can optionally pass variables manually by using the
<code>window.goatcounter.vars</code> object.

The default value will be used if the value is <code>null</code> or
<code>undefined</code> (but <em>not</em> on empty string!) The value can be used
as a callback too: the default value is passed and the return value is sent to
the server. Nothing is sent if the return value from the <code>path</code>
callback is <code>null</code>.</p>

<p>Supported keys:</p>

<ul>
	<li><code>path</code> – Current page that’s recorded, without domain (e.g.
		<code>/path/page.html</code>).</li>

	<li><code>referrer</code> – Where the user came from; can be an URL
		(<code>https://example.com</code>) or any string
		(<code>June Newsletter</code>). Default is to use the Referer
		header.</li>

	<li><code>no_onload</code> – Don’t do anything on page load; if you want to
		call <code>count()</code> manually.</li>
</ul>

<p>Callable methods:</p>
<ul>
	<li><code>window.goatcounter.count(vars)</code> – Count an event. The
		<code>vars</code> parameter is an object as described above, and wil
		take precedence over the global <code>window.goatcounter.vars</code>.</li>
</ul>

<h3>Examples</h3>

<h4>Load only on production</h4>
<p>You can check <code>location.host</code> if you want to load GoatCounter only
on <code>production.com</code> and not <code>staging.com</code> or
<code>development.com</code>; for example:</p>

<pre>&lt;script&gt;
	(function() {
		// Only load on production environment.
		if (window.location.host !== 'production.com')
			return;

		var script = document.createElement('script');
		// [.. rest of standard script omitted ..]
	})();
&lt;/script&gt;</pre>

<p>Note that <a href="https://github.com/zgoat/goatcounter/blob/9525be9/public/count.js#L69-L72">
	request from localhost are already ignored</a>.</p>

<h4>Custom path</h4>
<pre>&lt;script&gt;
	(function() {
		window.goatcounter = window.goatcounter || {};
		window.goatcounter.vars = {
			path: function(p) {
				// Don't track the home page.
				if (p === '/')
					return null;

				// Remove .html from all other page links.
				return p.replace(/\.html$/, '');
			},

			// Very simplistic method to get referrer from URL (e.g. ?ref=Newsletter)
			referrer: (window.location.search ? window.location.search.split('=')[1] : null),
		};

		var script = document.createElement('script');
		// [.. rest of standard script omitted ..]
	})();
&lt;/script&gt;</pre>

<h4>SPA</h4>
<p>Custom <code>count()</code> example for hooking in to an SPA:</p>
<pre>&lt;script&gt;
	(function() {
		window.goatcounter = window.goatcounter || {};
		window.goatcounter.vars = {no_onload: true}

		window.addEventListener('hashchange', function(e) {
			window.goatcounter.count({
				page: window.location.pathname + window.location.search + window.location.hash,
			});
		});

		var script = document.createElement('script');
		// [.. rest of standard script omitted ..]
	})();
&lt;/script&gt;</pre>

{{end}}
